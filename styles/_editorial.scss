@import '_utils.scss';

// Editorial
#scrollIndicator {
  & > * {
    animation: scrollmove 1.5s linear infinite;
  }
}

@keyframes scrollmove {
  0%,
  10% {
    opacity: 0;
    transform: translateY(-20px);
  }
  40%,
  60% {
    opacity: 1;
  }
  90%,
  100% {
    opacity: 0;
    transform: translateY(20px);
  }
}

// Editorial
.comingsoonSticky {
  position: sticky;
  position: -webkit-sticky;
  top: 0px;
  bottom: auto;
  @apply max-md:relative;
}

#editorial-slider {
  .editorialCard {
    position: relative;
    width: calc(100% / 5);
    &::after {
      content: '';
      display: block;
      padding-bottom: 100%;
    }
  }
}

// Issue
$card-width: 360px;
$card-height: 480px;
.article-card {
  // max-width: $card-width;
  width: $card-width;
  height: $card-height;
  aspect-ratio: 18 / 24;
}

$issuecard-width: $card-width + 40px;
$issuecardgap: 40px;
#search-results {
  @apply grid grid-flow-row grid-cols-3 grid-rows-none max-md:grid-cols-1;
  grid-gap: $issuecardgap;
  max-width: $issuecard-width * 3 + $issuecardgap * 2;
}

// ISSUE LIST
.issue_container {
  width: 100%;
  overflow-x: scroll;
  overflow-y: visible !important;
  white-space: nowrap;
  &::before,
  &::after {
    content: '';
    display: block;
    width: calc((100vw - #{$card-width + 20px}) / 2);
    height: 100%;
    flex-shrink: 0;
  }

  &.noscroll {
    justify-content: center;
    &::before,
    &::after {
      width: 0px;
    }
  }
  & .article_wrapper {
    padding: 30px 0px;
    & > a {
      display: block;
    }
  }
}

.issueindicator.noscroll {
  transform: translateX(-50%) !important;
  left: 50%;
}

// ARTICLE CAROUSEL

.thumbnail-swipe .swiper-slide:not(.swiper-slide-thumb-active) {
  opacity: 0.5;
  @apply transition-opacity duration-300;
  &:hover {
    opacity: 1;
  }
}

// SWIPER
.swiper-pagination-bullets {
  display: none;
}

#swipe-caroussel .swiper-slide {
  @apply w-56 max-md:w-36 #{!important};
}

#swipe-editorial {
  .swiper-slide {
    width: 384px;
    & .article_wrapper {
      @apply px-3 py-6;
      & > a {
        @apply transition-transform duration-300 block relative;
      }
      &.prev-2 > a {
        transform: rotateZ(-4deg) translate(0, 20px);
      }
      &.prev-1 > a {
        transform: rotateZ(-2.5deg) translate(0, 5px);
      }
      &.next-1 > a {
        transform: rotateZ(2.5deg) translate(0, 5px);
      }
      &.next-2 > a {
        transform: rotateZ(4deg) translate(0, 20px);
      }
    }
  }
}
